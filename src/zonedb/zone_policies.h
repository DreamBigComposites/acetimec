// This file was generated by the following script:
//
//   $ /home/brian/src/AceTimeTools/src/acetimetools/tzcompiler.py
//     --input_dir /home/brian/src/AceTimeC/src/zonedb/tzfiles
//     --output_dir /home/brian/src/AceTimeC/src/zonedb
//     --tz_version 2022g
//     --action zonedb
//     --language c
//     --scope extended
//     --db_namespace Atc
//     --offset_granularity 1
//     --delta_granularity 60
//     --until_at_granularity 1
//     --generate_int16_years
//     --generate_hires
//     --start_year 1800
//     --until_year 10000
//     --nocompress
//
// using the TZ Database files
//
//   africa
//   antarctica
//   asia
//   australasia
//   backward
//   etcetera
//   europe
//   northamerica
//   southamerica
//
// from https://github.com/eggert/tz/releases/tag/2022g
//
// Supported Zones: 596 (351 zones, 245 links)
// Unsupported Zones: 0 (0 zones, 0 links)
// Original Years: [1844,2087]
// Generated Years: [1844,2087]
//
// Memory (8-bits):
//   Rules: 25812
//   Policies: 402
//   Eras: 29280
//   Zones: 4563
//   Links: 3185
//   Registry: 1192
//   Formats: 1032
//   Letters: 160
//   Fragments: 0
//   Names: 9076 (original: 9076)
//   TOTAL: 74702
//
// Memory (32-bits):
//   Rules: 25812
//   Policies: 1072
//   Eras: 39040
//   Zones: 8424
//   Links: 5880
//   Registry: 2384
//   Formats: 1032
//   Letters: 216
//   Fragments: 0
//   Names: 9076 (original: 9076)
//   TOTAL: 92936
//
// DO NOT EDIT

#ifndef ACE_TIME_C_ZONEDB_ATC_ZONE_POLICIES_H
#define ACE_TIME_C_ZONEDB_ATC_ZONE_POLICIES_H

#include "../zoneinfo/zone_info.h"

#ifdef __cplusplus
extern "C" {
#endif

//---------------------------------------------------------------------------
// Supported policies: 134
// Supported rules: 2151
//---------------------------------------------------------------------------

extern const AtcZonePolicy kAtcZonePolicyAN;
extern const AtcZonePolicy kAtcZonePolicyAQ;
extern const AtcZonePolicy kAtcZonePolicyAS;
extern const AtcZonePolicy kAtcZonePolicyAT;
extern const AtcZonePolicy kAtcZonePolicyAV;
extern const AtcZonePolicy kAtcZonePolicyAW;
extern const AtcZonePolicy kAtcZonePolicyAlbania;
extern const AtcZonePolicy kAtcZonePolicyAlgeria;
extern const AtcZonePolicy kAtcZonePolicyArg;
extern const AtcZonePolicy kAtcZonePolicyArmenia;
extern const AtcZonePolicy kAtcZonePolicyAus;
extern const AtcZonePolicy kAtcZonePolicyAustria;
extern const AtcZonePolicy kAtcZonePolicyAzer;
extern const AtcZonePolicy kAtcZonePolicyBarb;
extern const AtcZonePolicy kAtcZonePolicyBelgium;
extern const AtcZonePolicy kAtcZonePolicyBelize;
extern const AtcZonePolicy kAtcZonePolicyBermuda;
extern const AtcZonePolicy kAtcZonePolicyBrazil;
extern const AtcZonePolicy kAtcZonePolicyBulg;
extern const AtcZonePolicy kAtcZonePolicyC_Eur;
extern const AtcZonePolicy kAtcZonePolicyCA;
extern const AtcZonePolicy kAtcZonePolicyCO;
extern const AtcZonePolicy kAtcZonePolicyCR;
extern const AtcZonePolicy kAtcZonePolicyCanada;
extern const AtcZonePolicy kAtcZonePolicyChatham;
extern const AtcZonePolicy kAtcZonePolicyChicago;
extern const AtcZonePolicy kAtcZonePolicyChile;
extern const AtcZonePolicy kAtcZonePolicyCook;
extern const AtcZonePolicy kAtcZonePolicyCuba;
extern const AtcZonePolicy kAtcZonePolicyCyprus;
extern const AtcZonePolicy kAtcZonePolicyCzech;
extern const AtcZonePolicy kAtcZonePolicyDR;
extern const AtcZonePolicy kAtcZonePolicyDenver;
extern const AtcZonePolicy kAtcZonePolicyDetroit;
extern const AtcZonePolicy kAtcZonePolicyDhaka;
extern const AtcZonePolicy kAtcZonePolicyE_Eur;
extern const AtcZonePolicy kAtcZonePolicyE_EurAsia;
extern const AtcZonePolicy kAtcZonePolicyEU;
extern const AtcZonePolicy kAtcZonePolicyEUAsia;
extern const AtcZonePolicy kAtcZonePolicyEcuador;
extern const AtcZonePolicy kAtcZonePolicyEdm;
extern const AtcZonePolicy kAtcZonePolicyEgypt;
extern const AtcZonePolicy kAtcZonePolicyEgyptAsia;
extern const AtcZonePolicy kAtcZonePolicyEire;
extern const AtcZonePolicy kAtcZonePolicyFalk;
extern const AtcZonePolicy kAtcZonePolicyFiji;
extern const AtcZonePolicy kAtcZonePolicyFinland;
extern const AtcZonePolicy kAtcZonePolicyFrance;
extern const AtcZonePolicy kAtcZonePolicyGB_Eire;
extern const AtcZonePolicy kAtcZonePolicyGermany;
extern const AtcZonePolicy kAtcZonePolicyGreece;
extern const AtcZonePolicy kAtcZonePolicyGuam;
extern const AtcZonePolicy kAtcZonePolicyGuat;
extern const AtcZonePolicy kAtcZonePolicyHK;
extern const AtcZonePolicy kAtcZonePolicyHaiti;
extern const AtcZonePolicy kAtcZonePolicyHalifax;
extern const AtcZonePolicy kAtcZonePolicyHoliday;
extern const AtcZonePolicy kAtcZonePolicyHond;
extern const AtcZonePolicy kAtcZonePolicyHungary;
extern const AtcZonePolicy kAtcZonePolicyIndianapolis;
extern const AtcZonePolicy kAtcZonePolicyIran;
extern const AtcZonePolicy kAtcZonePolicyIraq;
extern const AtcZonePolicy kAtcZonePolicyItaly;
extern const AtcZonePolicy kAtcZonePolicyJapan;
extern const AtcZonePolicy kAtcZonePolicyJordan;
extern const AtcZonePolicy kAtcZonePolicyKyrgyz;
extern const AtcZonePolicy kAtcZonePolicyLH;
extern const AtcZonePolicy kAtcZonePolicyLatvia;
extern const AtcZonePolicy kAtcZonePolicyLebanon;
extern const AtcZonePolicy kAtcZonePolicyLibya;
extern const AtcZonePolicy kAtcZonePolicyLouisville;
extern const AtcZonePolicy kAtcZonePolicyMacau;
extern const AtcZonePolicy kAtcZonePolicyMalta;
extern const AtcZonePolicy kAtcZonePolicyMarengo;
extern const AtcZonePolicy kAtcZonePolicyMauritius;
extern const AtcZonePolicy kAtcZonePolicyMenominee;
extern const AtcZonePolicy kAtcZonePolicyMexico;
extern const AtcZonePolicy kAtcZonePolicyMoldova;
extern const AtcZonePolicy kAtcZonePolicyMoncton;
extern const AtcZonePolicy kAtcZonePolicyMongol;
extern const AtcZonePolicy kAtcZonePolicyMorocco;
extern const AtcZonePolicy kAtcZonePolicyNBorneo;
extern const AtcZonePolicy kAtcZonePolicyNC;
extern const AtcZonePolicy kAtcZonePolicyNT_YK;
extern const AtcZonePolicy kAtcZonePolicyNYC;
extern const AtcZonePolicy kAtcZonePolicyNZ;
extern const AtcZonePolicy kAtcZonePolicyNamibia;
extern const AtcZonePolicy kAtcZonePolicyNic;
extern const AtcZonePolicy kAtcZonePolicyPRC;
extern const AtcZonePolicy kAtcZonePolicyPakistan;
extern const AtcZonePolicy kAtcZonePolicyPalestine;
extern const AtcZonePolicy kAtcZonePolicyPara;
extern const AtcZonePolicy kAtcZonePolicyPerry;
extern const AtcZonePolicy kAtcZonePolicyPeru;
extern const AtcZonePolicy kAtcZonePolicyPhil;
extern const AtcZonePolicy kAtcZonePolicyPike;
extern const AtcZonePolicy kAtcZonePolicyPoland;
extern const AtcZonePolicy kAtcZonePolicyPort;
extern const AtcZonePolicy kAtcZonePolicyPulaski;
extern const AtcZonePolicy kAtcZonePolicyROK;
extern const AtcZonePolicy kAtcZonePolicyRegina;
extern const AtcZonePolicy kAtcZonePolicyRomania;
extern const AtcZonePolicy kAtcZonePolicyRussia;
extern const AtcZonePolicy kAtcZonePolicyRussiaAsia;
extern const AtcZonePolicy kAtcZonePolicySA;
extern const AtcZonePolicy kAtcZonePolicySalv;
extern const AtcZonePolicy kAtcZonePolicySanLuis;
extern const AtcZonePolicy kAtcZonePolicyShang;
extern const AtcZonePolicy kAtcZonePolicySovietZone;
extern const AtcZonePolicy kAtcZonePolicySpain;
extern const AtcZonePolicy kAtcZonePolicySpainAfrica;
extern const AtcZonePolicy kAtcZonePolicyStJohns;
extern const AtcZonePolicy kAtcZonePolicyStarke;
extern const AtcZonePolicy kAtcZonePolicySudan;
extern const AtcZonePolicy kAtcZonePolicySwift;
extern const AtcZonePolicy kAtcZonePolicySwiss;
extern const AtcZonePolicy kAtcZonePolicySyria;
extern const AtcZonePolicy kAtcZonePolicyTaiwan;
extern const AtcZonePolicy kAtcZonePolicyThule;
extern const AtcZonePolicy kAtcZonePolicyTonga;
extern const AtcZonePolicy kAtcZonePolicyToronto;
extern const AtcZonePolicy kAtcZonePolicyTroll;
extern const AtcZonePolicy kAtcZonePolicyTunisia;
extern const AtcZonePolicy kAtcZonePolicyTurkey;
extern const AtcZonePolicy kAtcZonePolicyUS;
extern const AtcZonePolicy kAtcZonePolicyUruguay;
extern const AtcZonePolicy kAtcZonePolicyVanc;
extern const AtcZonePolicy kAtcZonePolicyVanuatu;
extern const AtcZonePolicy kAtcZonePolicyVincennes;
extern const AtcZonePolicy kAtcZonePolicyW_Eur;
extern const AtcZonePolicy kAtcZonePolicyWS;
extern const AtcZonePolicy kAtcZonePolicyWinn;
extern const AtcZonePolicy kAtcZonePolicyYukon;
extern const AtcZonePolicy kAtcZonePolicyZion;


//---------------------------------------------------------------------------
// Unsupported zone policies: 0
//---------------------------------------------------------------------------



//---------------------------------------------------------------------------
// Notable zone policies: 134
//---------------------------------------------------------------------------

// AN {Added anchor rule at year -32767}
// AQ {Added anchor rule at year -32767}
// AS {Added anchor rule at year -32767}
// AT {Added anchor rule at year -32767}
// AV {Added anchor rule at year -32767}
// AW {Added anchor rule at year -32767}
// Albania {Added anchor rule at year -32767}
// Algeria {Added anchor rule at year -32767}
// Arg {Added anchor rule at year -32767}
// Armenia {Added anchor rule at year -32767}
// Aus {Added anchor rule at year -32767}
// Austria {Added anchor rule at year -32767}
// Azer {Added anchor rule at year -32767}
// Barb {
//   Added anchor rule at year -32767,
//   SAVE '0:30' different from 1:00,
// }
// Belgium {Added anchor rule at year -32767}
// Belize {
//   Added anchor rule at year -32767,
//   LETTER '-0530' not single character,
//   LETTER 'CDT' not single character,
//   LETTER 'CPT' not single character,
//   LETTER 'CST' not single character,
//   LETTER 'CWT' not single character,
//   SAVE '0:30' different from 1:00,
// }
// Bermuda {Added anchor rule at year -32767}
// Brazil {Added anchor rule at year -32767}
// Bulg {Added anchor rule at year -32767}
// C-Eur {Added anchor rule at year -32767}
// CA {
//   AT '2:01' not on 15-minute boundary,
//   Added anchor rule at year -32767,
// }
// CO {Added anchor rule at year -32767}
// CR {Added anchor rule at year -32767}
// Canada {Added anchor rule at year -32767}
// Chatham {Added anchor rule at year -32767}
// Chicago {Added anchor rule at year -32767}
// Chile {Added anchor rule at year -32767}
// Cook {
//   Added anchor rule at year -32767,
//   SAVE '0:30' different from 1:00,
// }
// Cuba {Added anchor rule at year -32767}
// Cyprus {Added anchor rule at year -32767}
// Czech {Added anchor rule at year -32767}
// DR {
//   Added anchor rule at year -32767,
//   LETTER '-0430' not single character,
//   LETTER 'EDT' not single character,
//   LETTER 'EST' not single character,
//   SAVE '0:30' different from 1:00,
// }
// Denver {Added anchor rule at year -32767}
// Detroit {Added anchor rule at year -32767}
// Dhaka {Added anchor rule at year -32767}
// E-Eur {Added anchor rule at year -32767}
// E-EurAsia {Added anchor rule at year -32767}
// EU {Added anchor rule at year -32767}
// EUAsia {Added anchor rule at year -32767}
// Ecuador {Added anchor rule at year -32767}
// Edm {Added anchor rule at year -32767}
// Egypt {Added anchor rule at year -32767}
// EgyptAsia {Added anchor rule at year -32767}
// Eire {
//   Added anchor rule at year -32767,
//   SAVE '-1:00' different from 1:00,
// }
// Falk {Added anchor rule at year -32767}
// Fiji {Added anchor rule at year -32767}
// Finland {Added anchor rule at year -32767}
// France {
//   Added anchor rule at year -32767,
//   SAVE '2:00' different from 1:00,
// }
// GB-Eire {
//   Added anchor rule at year -32767,
//   LETTER 'BDST' not single character,
//   LETTER 'BST' not single character,
//   LETTER 'GMT' not single character,
//   SAVE '2:00' different from 1:00,
// }
// Germany {
//   Added anchor rule at year -32767,
//   SAVE '2:00' different from 1:00,
// }
// Greece {Added anchor rule at year -32767}
// Guam {
//   AT '0:01' not on 15-minute boundary,
//   AT '2:01' not on 15-minute boundary,
//   Added anchor rule at year -32767,
// }
// Guat {Added anchor rule at year -32767}
// HK {Added anchor rule at year -32767}
// Haiti {Added anchor rule at year -32767}
// Halifax {Added anchor rule at year -32767}
// Holiday {Added anchor rule at year -32767}
// Hond {Added anchor rule at year -32767}
// Hungary {Added anchor rule at year -32767}
// Indianapolis {Added anchor rule at year -32767}
// Iran {Added anchor rule at year -32767}
// Iraq {Added anchor rule at year -32767}
// Italy {Added anchor rule at year -32767}
// Japan {Added anchor rule at year -32767}
// Jordan {Added anchor rule at year -32767}
// Kyrgyz {Added anchor rule at year -32767}
// LH {
//   Added anchor rule at year -32767,
//   SAVE '0:30' different from 1:00,
// }
// Latvia {Added anchor rule at year -32767}
// Lebanon {Added anchor rule at year -32767}
// Libya {Added anchor rule at year -32767}
// Louisville {
//   AT '0:01' not on 15-minute boundary,
//   Added anchor rule at year -32767,
// }
// Macau {Added anchor rule at year -32767}
// Malta {Added anchor rule at year -32767}
// Marengo {Added anchor rule at year -32767}
// Mauritius {Added anchor rule at year -32767}
// Menominee {Added anchor rule at year -32767}
// Mexico {Added anchor rule at year -32767}
// Moldova {Added anchor rule at year -32767}
// Moncton {
//   AT '0:01' not on 15-minute boundary,
//   Added anchor rule at year -32767,
// }
// Mongol {Added anchor rule at year -32767}
// Morocco {
//   Added anchor rule at year -32767,
//   SAVE '-1:00' different from 1:00,
// }
// NBorneo {
//   Added anchor rule at year -32767,
//   SAVE '0:20' different from 1:00,
// }
// NC {Added anchor rule at year -32767}
// NT_YK {Added anchor rule at year -32767}
// NYC {Added anchor rule at year -32767}
// NZ {
//   Added anchor rule at year -32767,
//   SAVE '0:30' different from 1:00,
// }
// Namibia {
//   Added anchor rule at year -32767,
//   LETTER 'CAT' not single character,
//   LETTER 'WAT' not single character,
//   SAVE '-1:00' different from 1:00,
// }
// Nic {Added anchor rule at year -32767}
// PRC {Added anchor rule at year -32767}
// Pakistan {Added anchor rule at year -32767}
// Palestine {
//   AT '0:01' not on 15-minute boundary,
//   Added anchor rule at year -32767,
// }
// Para {Added anchor rule at year -32767}
// Perry {Added anchor rule at year -32767}
// Peru {Added anchor rule at year -32767}
// Phil {Added anchor rule at year -32767}
// Pike {Added anchor rule at year -32767}
// Poland {Added anchor rule at year -32767}
// Port {
//   Added anchor rule at year -32767,
//   SAVE '2:00' different from 1:00,
// }
// Pulaski {Added anchor rule at year -32767}
// ROK {Added anchor rule at year -32767}
// Regina {Added anchor rule at year -32767}
// Romania {Added anchor rule at year -32767}
// Russia {
//   Added anchor rule at year -32767,
//   LETTER '+05' not single character,
//   LETTER 'MDST' not single character,
//   LETTER 'MMT' not single character,
//   LETTER 'MSD' not single character,
//   LETTER 'MSK' not single character,
//   LETTER 'MST' not single character,
//   SAVE '2:00' different from 1:00,
// }
// RussiaAsia {Added anchor rule at year -32767}
// SA {Added anchor rule at year -32767}
// Salv {Added anchor rule at year -32767}
// SanLuis {Added anchor rule at year -32767}
// Shang {Added anchor rule at year -32767}
// SovietZone {
//   Added anchor rule at year -32767,
//   SAVE '2:00' different from 1:00,
// }
// Spain {
//   Added anchor rule at year -32767,
//   SAVE '2:00' different from 1:00,
// }
// SpainAfrica {Added anchor rule at year -32767}
// StJohns {
//   AT '0:01' not on 15-minute boundary,
//   Added anchor rule at year -32767,
//   LETTER 'DD' not single character,
//   SAVE '2:00' different from 1:00,
// }
// Starke {Added anchor rule at year -32767}
// Sudan {Added anchor rule at year -32767}
// Swift {Added anchor rule at year -32767}
// Swiss {Added anchor rule at year -32767}
// Syria {Added anchor rule at year -32767}
// Taiwan {Added anchor rule at year -32767}
// Thule {Added anchor rule at year -32767}
// Tonga {Added anchor rule at year -32767}
// Toronto {Added anchor rule at year -32767}
// Troll {
//   Added anchor rule at year -32767,
//   LETTER '+00' not single character,
//   LETTER '+02' not single character,
//   SAVE '2:00' different from 1:00,
// }
// Tunisia {Added anchor rule at year -32767}
// Turkey {Added anchor rule at year -32767}
// US {Added anchor rule at year -32767}
// Uruguay {
//   Added anchor rule at year -32767,
//   SAVE '0:30' different from 1:00,
//   SAVE '1:30' different from 1:00,
// }
// Vanc {Added anchor rule at year -32767}
// Vanuatu {Added anchor rule at year -32767}
// Vincennes {Added anchor rule at year -32767}
// W-Eur {Added anchor rule at year -32767}
// WS {Added anchor rule at year -32767}
// Winn {Added anchor rule at year -32767}
// Yukon {
//   Added anchor rule at year -32767,
//   LETTER 'DD' not single character,
//   SAVE '2:00' different from 1:00,
// }
// Zion {
//   Added anchor rule at year -32767,
//   LETTER 'DD' not single character,
//   SAVE '2:00' different from 1:00,
// }


//---------------------------------------------------------------------------

#ifdef __cplusplus
}
#endif

#endif
